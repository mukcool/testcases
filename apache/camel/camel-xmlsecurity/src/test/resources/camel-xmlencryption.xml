<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements. See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership. The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License. You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied. See the License for the
 specific language governing permissions and limitations
 under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <camel:keyStoreParameters id="encryptionParams" resource="./clientstore.jks" 
           password="{{client.store.password}}" />
           
    <camel:keyStoreParameters id="decryptionParams" resource="./servicestore.jks" 
           password="{{service.store.password}}" />
           
    <bean id="jasypt" class="org.apache.camel.component.jasypt.JasyptPropertiesParser">
        <!-- password is mandatory, you can prefix it with sysenv: or sys: to indicate it should use
         an OS environment or JVM system property value, so you dont have the master password defined here -->
        <property name="password" value="sys:PASSWORD"/>
    </bean>
    
    <camelContext xmlns="http://camel.apache.org/schema/spring"
        xmlns:ns1="urn:example:po">
         <!-- define the camel properties placeholder, and let it leverage jasypt -->
         <propertyPlaceholder id="properties"
                         location="classpath:passwords.properties"
                         propertiesParserRef="jasypt"/>
        <route>
            <from uri="file:src/test/resources/data?noop=true"/>
                <marshal>
                    <secureXML
                        secureTag="//ns1:PaymentInfo"
                        secureTagContents="true"
                        xmlCipherAlgorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc"       
                        recipientKeyAlias="myservicekey"
                        keyOrTrustStoreParametersRef="encryptionParams" />
                </marshal>
            <to uri="file:target/encrypted-data?fileName=${file:name}.encrypted"/>
        </route>
        <route>
            <from uri="file:target/encrypted-data?noop=true"/>
                <unmarshal>
                    <secureXML
                        secureTag="//ns1:PaymentInfo"
                        secureTagContents="true"
                        xmlCipherAlgorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc"       
                        keyCipherAlgorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"
                        recipientKeyAlias="myservicekey"
                        keyPassword="{{service.key.password}}"
                        keyOrTrustStoreParametersRef="decryptionParams" />
                </unmarshal>
            <to uri="file:target/decrypted-data?fileName=${file:name.noext}.decrypted"/>
        </route>
    </camelContext>
  
</beans>
